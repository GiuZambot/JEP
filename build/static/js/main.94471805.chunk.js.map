{"version":3,"sources":["App.js","reportWebVitals.js","index.js","snippets.js"],"names":["Prism","manual","valor","transfer","App","loging","setState","conteudo","state","className","href","tranfer","this","Component","Code","props","code","highlight","ref","current","highlightElement","execute","evaluate","textContent","React","createRef","plugins","language","join","trim","onClick","Explorer","listItems","listar","lista","map","i","search","result","snippets","filter","includes","value","onKeyUp","type","id","Console","document","getElementById","defaultValue","cols","rows","placeholder","y","script","createElement","text","getElementsByTagName","appendChild","head","removeChild","lastChild","realConsoleLog","console","log","message","call","arguments","apply","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","push","module","exports"],"mappings":"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","file":"static/js/main.94471805.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Prism from 'prismjs';\nimport './App.css';\nimport './prism.css';\nimport { snippets } from './snippets';\nPrism.manual = true;\nlet valor = \"console.log('giu');\";\nlet transfer = \"\";\nexport class App extends Component {\n  loging = () => {\n    this.setState({ conteudo: transfer });\n  }\n\n  state = { conteudo: transfer };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>JEP - Javascript Explorer Playground <a href=\"https://github.com/GiuZambot/jep\">Repositório GitHub</a></h3>\n        </header>\n        <main>\n          <Explorer loging={() => this.loging()} tranfer={this.state.conteudo} />\n          <Console loging={() => this.loging()} tranfer={this.state.conteudo} />\n        </main>\n      </div>\n    );\n  };\n};\n\nexport class Code extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n  state = { code: '' };\n  componentDidMount() {\n    this.highlight();\n  }\n  componentDidUpdate() {\n    this.highlight();\n  }\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current);\n    }\n  }\n  execute = () => {\n    evaluate(this.ref.current.textContent);\n    this.props.loging();\n  }\n  render() {\n    const { code, plugins, language } = this.props;\n    return (\n      <pre className={!plugins ? \"\" : plugins.join(\" \")}>\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n        <button onClick={this.execute}>executar</button>\n      </pre>\n    )\n  }\n}\n\nclass Explorer extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    this.listar(snippets);\n  }\n\n  listItems = [];\n  state = { conteudo: this.listItems };\n\n  listar = (lista) => {\n    this.listItems = lista.map((code, i) =>\n      <Code\n        key={i}\n        code={code}\n        language=\"js\"\n        loging={() => this.props.loging()}\n        tranfer={this.props.tranfer}\n      />\n    );\n    this.setState({ conteudo: this.listItems });\n  }\n\n  search = () => {\n    if (this.ref && this.ref.current) {\n      const result = snippets.filter(i => i.includes(this.ref.current.value));\n      this.listar(result);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"snippets\">\n        <h6>Snippets</h6>\n        <input ref={this.ref} onKeyUp={this.search} className=\"btn-search\" type=\"text\" id=\"\" />\n        {this.state.conteudo}\n      </div>\n    );\n  }\n}\n\nclass Console extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n  state = { conteudo: valor };\n\n  execute = () => {\n    evaluate(document.getElementById('code').value);\n    this.props.loging();\n    //this.ref = React.createRef();\n  }\n\n  render() {\n    return (\n      <div className=\"box\">\n        <div className=\"console\">\n          <h6>Editor:</h6>\n          <textarea id=\"code\" defaultValue={valor} cols=\"25\" rows=\"10\" placeholder=\"Cole ou digite o código aqui, depois clique em Executar.\"></textarea>\n          {/* <Editor\n            code={valor}\n            language=\"js\"\n            loging={() => this.props.loging()}\n            tranfer={this.props.tranfer}\n          /> */}\n          <button onClick={this.execute} className='btn-executar'>Executar o código acima.</button>\n          <div className=\"console\">{this.props.tranfer}</div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n  state = { code: '' };\n  componentDidMount() {\n    this.highlight();\n  }\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current);\n    }\n  }\n  execute = () => {\n    evaluate(this.ref.current.textContent);\n    this.props.loging();\n  }\n  render() {\n    const { code, plugins, language } = this.props;\n    return (\n      <pre className={!plugins ? \"\" : plugins.join(\" \")}>\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n        <button onClick={this.execute}>executar</button>\n      </pre>\n    )\n  }\n}\n\nexport default App;\n\nfunction evaluate(y) {\n  transfer = '';\n  var script = document.createElement('script');\n  script.type = \"text/javascript\";\n  script.text = \"{console.clear();\" + y + \"}\";\n  document.getElementById(\"code\").value = y;\n  document.getElementsByTagName('head')[0].appendChild(script);\n  document.head.removeChild(document.head.lastChild);\n}\n\nvar realConsoleLog = console.log;\nconsole.log = function () {\n  var message = [].join.call(arguments, \", \");\n  transfer += `${message}\\n`;\n  realConsoleLog.apply(console, arguments);\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const snippets = [\r\n    \"console.log('teste');\",\r\n    \"console.log(5 * 7);\",\r\n    \"console.log(5 / 7);\",\r\n    \"console.log(5 ** 2);\",\r\n    \"const a = 5 \\nconsole.log(a + 7);\",\r\n];\r\n\r\nsnippets.push(`\r\n    console.log(25 ** 0.5);\r\n`);\r\n\r\nsnippets.push(`\r\n    console.log('teste');\r\n`);\r\n\r\nsnippets.push(`\r\n    console.log('start tech teste');\r\n`);\r\n\r\nmodule.exports = { snippets };"],"sourceRoot":""}